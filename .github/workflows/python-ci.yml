name: CI shared workflow

on:
  workflow_call:
    inputs:
      test-database:
        required: false
        type: boolean
        default: false
      database-name:
        required: false
        type: string
        default: ""
      database-user:
        required: false
        type: string
        default: ""
      database-password:
        required: false
        type: string
        default: ""

permissions:
  contents: read

jobs:
  StaticCodeAnalysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            install.python-poetry.org:443
            pypi.org:443  
      
      - uses: actions/checkout@v4
        with:
            submodules: recursive
            token: ${{ secrets.GH_TOKEN || github.token }}

      - uses: pantos-io/ci-workflows/.github/actions/install-python-deps@v1

      - name: StaticCodeAnalysis
        run: |
          make check

  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            install.python-poetry.org:443
            pypi.org:443    
      
      - uses: actions/checkout@v4
        with:
            submodules: recursive
            token: ${{ secrets.GH_TOKEN || github.token }}

      - uses: pantos-io/ci-workflows/.github/actions/install-python-deps@v1

      - name: Formatting
        id: formatter-check
        run: make format-check

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            install.python-poetry.org:443
            pypi.org:443    
      
      - uses: actions/checkout@v4
        with:
            submodules: recursive
            token: ${{ secrets.GH_TOKEN || github.token }}

      - uses: pantos-io/ci-workflows/.github/actions/install-python-deps@v1

      - name: Lint
        run: make lint

  Sort:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            install.python-poetry.org:443
            pypi.org:443  
      
      - uses: actions/checkout@v4
        with:
            submodules: recursive
            token: ${{ secrets.GH_TOKEN || github.token }}

      - uses: pantos-io/ci-workflows/.github/actions/install-python-deps@v1

      - name: Sort
        run: make sort-check

  Bandit:
    name: Bandit
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            install.python-poetry.org:443
            pypi.org:443  
      
      - uses: actions/checkout@v4
        with:
            submodules: recursive
            token: ${{ secrets.GH_TOKEN || github.token }}

      - uses: pantos-io/ci-workflows/.github/actions/install-python-deps@v1

      - name: Bandit
        run: make bandit

  UnitTest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ${{ (inputs.test-database) && 'postgres:latest' || '' }}
        env:
          POSTGRES_DB: ${{ inputs.database-name }}
          POSTGRES_USER: ${{ inputs.database-user }}
          POSTGRES_PASSWORD: ${{ inputs.database-password }}
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432

    steps:
      - uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            install.python-poetry.org:443
            pypi.org:443  
   
      - uses: actions/checkout@v4
        with:
            submodules: recursive
            token: ${{ secrets.GH_TOKEN || github.token }}

      - uses: pantos-io/ci-workflows/.github/actions/install-python-deps@v1
      
      - name: UnitTest
        run: |
            make coverage
            poetry run coverage xml
  
      - uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage.xml

      - name: PostgresUnitTest
        if: ${{ inputs.test-database }}
        run: |
            make coverage-postgres
            poetry run coverage xml -o postgres-coverage.xml

      - uses: actions/upload-artifact@v4
        if: ${{ inputs.test-database }}
        with:
          name: code-coverage-postgres-report
          path: postgres-coverage.xml
